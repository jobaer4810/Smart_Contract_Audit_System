{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61415\\\\Desktop\\\\Innovation Project\\\\website\\\\frontend\\\\src\\\\pages\\\\Audit\\\\Audit.jsx\",\n  _s = $RefreshSig$();\n/* Created by : Ali Mohammad Jobaer\r\nStudent ID : 103835483 */\n\nimport React, { useState } from 'react';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport Paper from '@mui/material/Paper';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport { styled } from '@mui/material/styles';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport api from '../../api';\n\n// Full Screen Paper component styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullScreenPaper = styled(Paper)({\n  minHeight: '100vh',\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '3rem'\n});\n// Hidden styled input for file selection\n_c = FullScreenPaper;\nconst StyledInput = styled('input')({\n  display: 'none'\n});\n_c2 = StyledInput;\nconst Audit = () => {\n  _s();\n  // States to manage uploaded file, snackbar visibility and error alert\n  const [file, setFile] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\n\n  // Handle file selection\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile && selectedFile.name.endsWith('.sol')) {\n      setFile(selectedFile);\n    } else {\n      setShowErrorAlert(true);\n      setTimeout(() => {\n        setShowErrorAlert(false);\n      }, 3000); // Auto-hide the error alert after 3 seconds\n    }\n  };\n\n  // Close handlers for alert and snackbar\n  const handleClose = () => {\n    setShowErrorAlert(false);\n  };\n\n  // Handle the file upload action\n  const handleSubmit = () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // Sending the file to the backend\n      api.post('/api/contracts/upload', formData).then(response => {\n        setOpenSnackbar(true);\n      }).catch(error => {\n        if (error.response && error.response.data) {\n          // Display the specific error message from the backend\n          console.error(error.response.data);\n          alert(error.response.data); // Or use your showErrorAlert state\n        } else {\n          setShowErrorAlert(true);\n        }\n        setTimeout(() => {\n          setShowErrorAlert(false);\n        }, 3000);\n      });\n    } else {\n      setShowErrorAlert(true);\n      setTimeout(() => {\n        setShowErrorAlert(false);\n      }, 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FullScreenPaper, {\n    sx: {\n      backgroundColor: '#898952',\n      color: '#ffffff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        paddingBottom: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Smart Contract Audit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: \"Upload your Solidity (.sol) file for comprehensive analysis. Our automated system will swiftly pinpoint vulnerabilities to bolster the security of your smart contract.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        paddingBottom: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          gap: 2,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(StyledInput, {\n            accept: \".sol\",\n            type: \"file\",\n            onChange: handleFileChange,\n            id: \"contained-button-file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 100\n              }, this),\n              component: \"span\",\n              children: \"Choose File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            style: {\n              paddingRight: '10px'\n            },\n            children: file ? file.name : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(CloudUploadIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 96\n            }, this),\n            onClick: handleSubmit,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }, this), showErrorAlert && /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          severity: \"error\",\n          sx: {\n            width: '100%',\n            marginTop: '1rem'\n          },\n          children: \"Please select a valid Solidity (.sol) file.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      message: \"File uploaded successfully. Analysis will commence shortly.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 25\n  }, this);\n};\n_s(Audit, \"9BIYGdRx+ZcrnSAOYaCIJXQfY+8=\");\n_c3 = Audit;\nexport default Audit;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FullScreenPaper\");\n$RefreshReg$(_c2, \"StyledInput\");\n$RefreshReg$(_c3, \"Audit\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","Button","CloudUploadIcon","Paper","AttachFileIcon","styled","Snackbar","Alert","api","jsxDEV","_jsxDEV","FullScreenPaper","minHeight","display","flexDirection","padding","_c","StyledInput","_c2","Audit","_s","file","setFile","openSnackbar","setOpenSnackbar","showErrorAlert","setShowErrorAlert","handleFileChange","event","selectedFile","target","files","name","endsWith","setTimeout","handleClose","handleSubmit","formData","FormData","append","post","then","response","catch","error","data","console","alert","sx","backgroundColor","color","children","maxWidth","paddingBottom","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","gap","alignItems","accept","type","onChange","id","htmlFor","startIcon","component","style","paddingRight","onClick","onClose","severity","width","marginTop","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","_c3","$RefreshReg$"],"sources":["C:/Users/61415/Desktop/Innovation Project/website/frontend/src/pages/Audit/Audit.jsx"],"sourcesContent":["/* Created by : Ali Mohammad Jobaer\r\nStudent ID : 103835483 */\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport Paper from '@mui/material/Paper';\r\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\r\nimport { styled } from '@mui/material/styles';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport api from '../../api';\r\n\r\n            // Full Screen Paper component styling\r\n            const FullScreenPaper = styled(Paper)({\r\n            minHeight: '100vh',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            padding: '3rem'\r\n            });\r\n            // Hidden styled input for file selection\r\n            const StyledInput = styled('input')({\r\n            display: 'none'\r\n            });\r\n\r\n            const Audit = () => {\r\n                // States to manage uploaded file, snackbar visibility and error alert\r\n                const [file, setFile] = useState(null);\r\n                const [openSnackbar, setOpenSnackbar] = useState(false);\r\n                const [showErrorAlert, setShowErrorAlert] = useState(false); \r\n                \r\n                // Handle file selection\r\n                const handleFileChange = (event) => {\r\n                    const selectedFile = event.target.files[0];\r\n                    if (selectedFile && selectedFile.name.endsWith('.sol')) {\r\n                        setFile(selectedFile);\r\n                    } else {\r\n                        setShowErrorAlert(true);\r\n                        setTimeout(() => {\r\n                            setShowErrorAlert(false);\r\n                        }, 3000); // Auto-hide the error alert after 3 seconds\r\n                    }\r\n                };\r\n\r\n                    // Close handlers for alert and snackbar\r\n                    const handleClose = () => {\r\n                        setShowErrorAlert(false);\r\n                    };\r\n\r\n                    // Handle the file upload action\r\n                    const handleSubmit = () => {\r\n                        if (file) {\r\n                            const formData = new FormData();\r\n                            formData.append('file', file);\r\n                    \r\n                            // Sending the file to the backend\r\n                            api.post('/api/contracts/upload', formData)\r\n                                .then(response => {\r\n                                    setOpenSnackbar(true);\r\n                                })\r\n                                .catch(error => {\r\n                                    if (error.response && error.response.data) {\r\n                                        // Display the specific error message from the backend\r\n                                        console.error(error.response.data);\r\n                                        alert(error.response.data); // Or use your showErrorAlert state\r\n                                    } else {\r\n                                        setShowErrorAlert(true);\r\n                                    }\r\n                                    setTimeout(() => {\r\n                                        setShowErrorAlert(false);\r\n                                    }, 3000); \r\n                                });\r\n                        } else {\r\n                            setShowErrorAlert(true);\r\n                            setTimeout(() => {\r\n                                setShowErrorAlert(false);\r\n                            }, 3000); \r\n                        }\r\n                    };\r\n                    \r\n                    return (\r\n                        <FullScreenPaper sx={{ backgroundColor: '#898952', color: '#ffffff' }}>\r\n                            <Container maxWidth=\"lg\">\r\n                                <Box paddingBottom={3}>\r\n                                    <Typography variant=\"h4\" gutterBottom>\r\n                                        Smart Contract Audit\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\" paragraph>\r\n                                        Upload your Solidity (.sol) file for comprehensive analysis. Our automated system will swiftly pinpoint vulnerabilities to bolster the security of your smart contract.\r\n                                    </Typography>\r\n                                </Box>\r\n\r\n                                 {/* File Upload Section */}\r\n                                <Box paddingBottom={3}>\r\n                                    <Typography variant=\"h6\" gutterBottom>\r\n                                        File Upload\r\n                                    </Typography>\r\n                                    <Box display=\"flex\" gap={2} alignItems=\"center\">\r\n                                        <StyledInput\r\n                                            accept=\".sol\"\r\n                                            type=\"file\"\r\n                                            onChange={handleFileChange}\r\n                                            id=\"contained-button-file\"\r\n                                        />\r\n\r\n                                        {/* File picker button */}\r\n                                        <label htmlFor=\"contained-button-file\">\r\n                                            <Button variant=\"contained\" color=\"primary\" startIcon={<AttachFileIcon />} component=\"span\">\r\n                                                Choose File\r\n                                            </Button>\r\n                                        </label>\r\n\r\n                                        {/* Display selected file name and upload button */}\r\n                                        <Typography variant=\"body1\" style={{ paddingRight: '10px' }}>\r\n                                            {file ? file.name : \"\"}\r\n                                        </Typography>\r\n                                        <Button variant=\"contained\" color=\"primary\" startIcon={<CloudUploadIcon />} onClick={handleSubmit}>\r\n                                            Upload\r\n                                        </Button>\r\n                                    </Box>\r\n\r\n                                    {/* Alert message for invalid file types */}\r\n                                    {showErrorAlert && (\r\n                                        <Alert onClose={handleClose} severity=\"error\" sx={{ width: '100%', marginTop: '1rem' }}>\r\n                                            Please select a valid Solidity (.sol) file.\r\n                                        </Alert>\r\n                                    )}\r\n                                </Box>\r\n                            </Container>\r\n\r\n                            {/* Snackbar notification for successful file upload */}\r\n                            <Snackbar\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'left',\r\n                                }}\r\n                                open={openSnackbar}\r\n                                autoHideDuration={6000}\r\n                                onClose={handleClose}\r\n                                message=\"File uploaded successfully. Analysis will commence shortly.\"\r\n                            />\r\n                        </FullScreenPaper>\r\n                    );\r\n                }\r\n                    export default Audit;"],"mappings":";;AAAA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,GAAG,MAAM,WAAW;;AAEf;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGN,MAAM,CAACF,KAAK,CAAC,CAAC;EACtCS,SAAS,EAAE,OAAO;EAClBC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,OAAO,EAAE;AACT,CAAC,CAAC;AACF;AAAAC,EAAA,GANML,eAAe;AAOrB,MAAMM,WAAW,GAAGZ,MAAM,CAAC,OAAO,CAAC,CAAC;EACpCQ,OAAO,EAAE;AACT,CAAC,CAAC;AAACK,GAAA,GAFGD,WAAW;AAIjB,MAAME,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAM8B,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1C,IAAIF,YAAY,IAAIA,YAAY,CAACG,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MACpDX,OAAO,CAACO,YAAY,CAAC;IACzB,CAAC,MAAM;MACHH,iBAAiB,CAAC,IAAI,CAAC;MACvBQ,UAAU,CAAC,MAAM;QACbR,iBAAiB,CAAC,KAAK,CAAC;MAC5B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACd;EACJ,CAAC;;EAEG;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBT,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIf,IAAI,EAAE;MACN,MAAMgB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAElB,IAAI,CAAC;;MAE7B;MACAb,GAAG,CAACgC,IAAI,CAAC,uBAAuB,EAAEH,QAAQ,CAAC,CACtCI,IAAI,CAACC,QAAQ,IAAI;QACdlB,eAAe,CAAC,IAAI,CAAC;MACzB,CAAC,CAAC,CACDmB,KAAK,CAACC,KAAK,IAAI;QACZ,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,IAAI,EAAE;UACvC;UACAC,OAAO,CAACF,KAAK,CAACA,KAAK,CAACF,QAAQ,CAACG,IAAI,CAAC;UAClCE,KAAK,CAACH,KAAK,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;QAChC,CAAC,MAAM;UACHnB,iBAAiB,CAAC,IAAI,CAAC;QAC3B;QACAQ,UAAU,CAAC,MAAM;UACbR,iBAAiB,CAAC,KAAK,CAAC;QAC5B,CAAC,EAAE,IAAI,CAAC;MACZ,CAAC,CAAC;IACV,CAAC,MAAM;MACHA,iBAAiB,CAAC,IAAI,CAAC;MACvBQ,UAAU,CAAC,MAAM;QACbR,iBAAiB,CAAC,KAAK,CAAC;MAC5B,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACC,eAAe;IAACqC,EAAE,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAU,CAAE;IAAAC,QAAA,gBAClEzC,OAAA,CAACZ,SAAS;MAACsD,QAAQ,EAAC,IAAI;MAAAD,QAAA,gBACpBzC,OAAA,CAACV,GAAG;QAACqD,aAAa,EAAE,CAAE;QAAAF,QAAA,gBAClBzC,OAAA,CAACX,UAAU;UAACuD,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAJ,QAAA,EAAC;QAEtC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbjD,OAAA,CAACX,UAAU;UAACuD,OAAO,EAAC,OAAO;UAACM,SAAS;UAAAT,QAAA,EAAC;QAEtC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eAGNjD,OAAA,CAACV,GAAG;QAACqD,aAAa,EAAE,CAAE;QAAAF,QAAA,gBAClBzC,OAAA,CAACX,UAAU;UAACuD,OAAO,EAAC,IAAI;UAACC,YAAY;UAAAJ,QAAA,EAAC;QAEtC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbjD,OAAA,CAACV,GAAG;UAACa,OAAO,EAAC,MAAM;UAACgD,GAAG,EAAE,CAAE;UAACC,UAAU,EAAC,QAAQ;UAAAX,QAAA,gBAC3CzC,OAAA,CAACO,WAAW;YACR8C,MAAM,EAAC,MAAM;YACbC,IAAI,EAAC,MAAM;YACXC,QAAQ,EAAEtC,gBAAiB;YAC3BuC,EAAE,EAAC;UAAuB;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eAGFjD,OAAA;YAAOyD,OAAO,EAAC,uBAAuB;YAAAhB,QAAA,eAClCzC,OAAA,CAACT,MAAM;cAACqD,OAAO,EAAC,WAAW;cAACJ,KAAK,EAAC,SAAS;cAACkB,SAAS,eAAE1D,OAAA,CAACN,cAAc;gBAAAoD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAACU,SAAS,EAAC,MAAM;cAAAlB,QAAA,EAAC;YAE5F;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAGRjD,OAAA,CAACX,UAAU;YAACuD,OAAO,EAAC,OAAO;YAACgB,KAAK,EAAE;cAAEC,YAAY,EAAE;YAAO,CAAE;YAAApB,QAAA,EACvD9B,IAAI,GAAGA,IAAI,CAACW,IAAI,GAAG;UAAE;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACbjD,OAAA,CAACT,MAAM;YAACqD,OAAO,EAAC,WAAW;YAACJ,KAAK,EAAC,SAAS;YAACkB,SAAS,eAAE1D,OAAA,CAACR,eAAe;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACa,OAAO,EAAEpC,YAAa;YAAAe,QAAA,EAAC;UAEnG;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,EAGLlC,cAAc,iBACXf,OAAA,CAACH,KAAK;UAACkE,OAAO,EAAEtC,WAAY;UAACuC,QAAQ,EAAC,OAAO;UAAC1B,EAAE,EAAE;YAAE2B,KAAK,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAzB,QAAA,EAAC;QAExF;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACV;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGZjD,OAAA,CAACJ,QAAQ;MACLuE,YAAY,EAAE;QACVC,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE;MAChB,CAAE;MACFC,IAAI,EAAEzD,YAAa;MACnB0D,gBAAgB,EAAE,IAAK;MACvBR,OAAO,EAAEtC,WAAY;MACrB+C,OAAO,EAAC;IAA6D;MAAA1B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE1B,CAAC;AAAAvC,EAAA,CAtHCD,KAAK;AAAAgE,GAAA,GAALhE,KAAK;AAuHH,eAAeA,KAAK;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAiE,GAAA;AAAAC,YAAA,CAAApE,EAAA;AAAAoE,YAAA,CAAAlE,GAAA;AAAAkE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}