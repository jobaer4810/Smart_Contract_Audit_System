/* Created by : Ali Mohammad Jobaer
Student ID : 103835483 */


const express = require('express');
const router = express.Router();
const db = require('../models');
const ReportVulnerabilities = db.reportVulnerabilities;

// Endpoint to associate a vulnerability with a report
router.post('/', async (req, res) => {
    try {
        const association = await ReportVulnerabilities.create(req.body);
        res.status(201).json(association);
    } catch (error) {
        res.status(500).send('Error creating association: ' + error);
    }
});

// Get all vulnerabilities for a specific report
router.get('/report/:reportId', async (req, res) => {
    try {
        // Fetch vulnerabilities associated with the specified report
        const vulnerabilities = await db.reportVulnerabilities.findAll({
            where: { report_id: req.params.reportId },
            include: { model: db.vulnerability, as: 'vulnerability' }  // Include vulnerability details and specify alias
        });

        // Map the associations to actual vulnerabilities with necessary details
        const vulnerabilityDetails = vulnerabilities.map(v => ({
            vulnerability_name: v.vulnerability.vulnerability_name,
            recommendation: v.vulnerability.recommendation
        }));

        res.status(200).json(vulnerabilityDetails);
    } catch (error) {
        res.status(500).send('Error fetching associations: ' + error);
    }
});

// Delete a specific association using its ID
router.delete('/:id', async (req, res) => {
    try {
        const deleted = await ReportVulnerabilities.destroy({
            where: { report_vulnerability_id: req.params.id }
        });
        if (deleted) {
            res.status(200).send('Association deleted successfully');
        } else {
            res.status(404).send('Association not found');
        }
    } catch (error) {
        res.status(500).send('Error deleting association: ' + error);
    }
});

// Endpoint to remove an association of a vulnerability from a report using report and vulnerability IDs
router.delete('/', async (req, res) => {
    const { report_id, vulnerability_id } = req.body;
    try {
        const deleted = await ReportVulnerabilities.destroy({
            where: { report_id, vulnerability_id }
        });
        if (deleted) {
            res.status(200).send('Association removed successfully.');
        } else {
            res.status(404).send('Association not found.');
        }
    } catch (error) {
        res.status(500).send('Error removing association: ' + error);
    }
});

module.exports = router;
